#  Measuring a person's probability of developing diabetes
import numpy as np
import pandas as pd
from sklearn import datasets, linear_model
from sklearn.metrics import mean_squared_error, r2_score
import matplotlib.pyplot as plt
%matplotlib inline

df = datasets.load_diabetes()
X = df.data[:, np.newaxis, 2]
X.shape
X_train = X[:-100]
X_test = X[-100:]

y_train = df.target[:-100]
y_test = df.target[-100:]

lr = linear_model.LinearRegression()
lr.fit(X_train, y_train)

y_pred = lr.predict(X_test)
print(y_pred)


print ('The liner Equation is: Y=', np.round_(lr.coef_, 2),'X  + ',np.round_(lr.intercept_,2  ))
print("Mean squared error: " ,  mean_squared_error(y_test, y_pred))
print('Variance score: ' ,  r2_score(y_test, y_pred))

# plot the outputs
plt.scatter(X_test, y_test, color='blue')
plt.plot(X_test, y_pred, color='red', linewidth=3)
plt.xticks(())
plt.yticks(())
plt.show()
